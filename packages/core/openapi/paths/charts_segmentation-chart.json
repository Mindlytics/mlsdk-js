{
  "get": {
    "tags": [
      "Charts"
    ],
    "summary": "Get a Segmentation Chart",
    "description": "Get a Segmentation Chart",
    "parameters": [
      {
        "name": "organization_id",
        "in": "query",
        "description": "organization_id",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "app_id",
        "in": "query",
        "description": "app_id",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "session_id",
        "in": "query",
        "description": "session_id",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "conversation_id",
        "in": "query",
        "description": "conversation_id",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "chartControls",
        "in": "query",
        "description": "Chart Controls",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "range": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "description": "The start of the range as an ISO date string",
                  "example": "2021-01-01T00:00:00Z"
                },
                "end": {
                  "type": "string",
                  "description": "The end of the range as an ISO date string",
                  "example": "2021-01-02T00:00:00Z"
                },
                "period": {
                  "type": "string",
                  "enum": [
                    "day",
                    "week",
                    "month"
                  ],
                  "description": "The size of the bins, or points, in a chart",
                  "example": "day"
                },
                "tz": {
                  "type": "string",
                  "description": "The browser's timezone",
                  "example": "America/New_York"
                }
              },
              "required": [
                "start",
                "end",
                "period",
                "tz"
              ],
              "description": "Time range for the chart.",
              "example": {
                "start": "2021-01-01T00:00:00Z",
                "end": "2021-01-02T00:00:00Z",
                "period": "day",
                "tz": "America/New_York"
              }
            },
            "eventFilters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event_name": {
                    "type": "string",
                    "description": "The name of the event.  Can be \"Any Event\" to match any event."
                  },
                  "with": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "property_name": {
                          "type": "string",
                          "description": "The name of the property whose values are being filtered.  This is typically a trait or event property."
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "case_insensitive_eq",
                            "case_insensitive_neq",
                            "regex",
                            "not_regex",
                            "between",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "The comparison operator to use when filtering the property values.  If not specified, the default is \"eq\".",
                          "example": "eq"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          "description": "The values to filter the property by.  This can be an array of one, in which case all operators are supported, or an array of multiple values, in which case only \"in\" and \"nin\" are supported."
                        }
                      },
                      "required": [
                        "property_name",
                        "values"
                      ]
                    },
                    "description": "If specified the event must have all the property/values specified.  User traits on the event are also valid."
                  },
                  "within": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "description": "The start of the time range as an ISO date string",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "end": {
                        "type": "string",
                        "description": "The end of the time range as an ISO date string",
                        "example": "2021-01-02T00:00:00Z"
                      },
                      "period": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "number",
                            "description": "The number of time units",
                            "example": 1
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "day",
                              "week",
                              "month"
                            ],
                            "description": "The time unit",
                            "example": "day"
                          },
                          "tz": {
                            "type": "string",
                            "description": "The timezone",
                            "example": "America/New_York"
                          }
                        },
                        "required": [
                          "number",
                          "unit",
                          "tz"
                        ],
                        "description": "The period of time to use when filtering the data.  If specified, overrides start and end.  This is typically used for events.",
                        "example": {
                          "number": 1,
                          "unit": "day",
                          "tz": "America/New_York"
                        }
                      }
                    },
                    "description": "If specified, the event must have occurred within this time range.",
                    "example": {
                      "start": "2021-01-01T00:00:00Z",
                      "end": "2021-01-02T00:00:00Z"
                    }
                  },
                  "groupBy": {
                    "type": "object",
                    "properties": {
                      "property_name": {
                        "type": "string"
                      },
                      "property_values": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "property_name",
                      "property_values"
                    ],
                    "description": "If specified, the events will be grouped by this property for the values specified."
                  },
                  "number_of": {
                    "type": "number",
                    "description": "If specified, the number of events of this type that must have occurred within the time range. The default is 1."
                  },
                  "number_of_operator": {
                    "type": "string",
                    "enum": [
                      "eq",
                      "gt",
                      "gte",
                      "lt",
                      "lte"
                    ],
                    "description": "If specified, the operator to use when filtering the number of events.  The default is \"gte\"."
                  },
                  "combine_previous_operation": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or",
                      "then"
                    ],
                    "description": "If specified, the operation to use when combining any previous event filters.  Defaults to \"and\"."
                  }
                },
                "required": [
                  "event_name"
                ]
              },
              "description": "Event filters for the segmentation."
            },
            "userFilters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cohort": {
                    "type": "string",
                    "description": "The name of the cohort.  Can be \"All Users\" to match any user."
                  },
                  "with": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "property_name": {
                          "type": "string",
                          "description": "The name of the property whose values are being filtered.  This is typically a trait or event property."
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "case_insensitive_eq",
                            "case_insensitive_neq",
                            "regex",
                            "not_regex",
                            "between",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "The comparison operator to use when filtering the property values.  If not specified, the default is \"eq\".",
                          "example": "eq"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          "description": "The values to filter the property by.  This can be an array of one, in which case all operators are supported, or an array of multiple values, in which case only \"in\" and \"nin\" are supported."
                        }
                      },
                      "required": [
                        "property_name",
                        "values"
                      ]
                    },
                    "description": "If specified, the user must have the trait/values specified."
                  },
                  "shown_intents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "intent": {
                          "type": "string",
                          "description": "The name of the intent.  Can be \"Any Intent\" to match any intent."
                        },
                        "with": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "property_name": {
                                "type": "string",
                                "description": "The name of the property whose values are being filtered.  This is typically a trait or event property."
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "eq",
                                  "neq",
                                  "in",
                                  "nin",
                                  "case_insensitive_eq",
                                  "case_insensitive_neq",
                                  "regex",
                                  "not_regex",
                                  "between",
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "description": "The comparison operator to use when filtering the property values.  If not specified, the default is \"eq\".",
                                "example": "eq"
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                },
                                "description": "The values to filter the property by.  This can be an array of one, in which case all operators are supported, or an array of multiple values, in which case only \"in\" and \"nin\" are supported."
                              }
                            },
                            "required": [
                              "property_name",
                              "values"
                            ]
                          },
                          "description": "If specified, the intent must have the attribute/values specified."
                        },
                        "within": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string",
                              "description": "The start of the time range as an ISO date string",
                              "example": "2021-01-01T00:00:00Z"
                            },
                            "end": {
                              "type": "string",
                              "description": "The end of the time range as an ISO date string",
                              "example": "2021-01-02T00:00:00Z"
                            },
                            "period": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "number",
                                  "description": "The number of time units",
                                  "example": 1
                                },
                                "unit": {
                                  "type": "string",
                                  "enum": [
                                    "day",
                                    "week",
                                    "month"
                                  ],
                                  "description": "The time unit",
                                  "example": "day"
                                },
                                "tz": {
                                  "type": "string",
                                  "description": "The timezone",
                                  "example": "America/New_York"
                                }
                              },
                              "required": [
                                "number",
                                "unit",
                                "tz"
                              ],
                              "description": "The period of time to use when filtering the data.  If specified, overrides start and end.  This is typically used for events.",
                              "example": {
                                "number": 1,
                                "unit": "day",
                                "tz": "America/New_York"
                              }
                            }
                          },
                          "description": "If specified, the intent must have occurred within this time range.",
                          "example": {
                            "start": "2021-01-01T00:00:00Z",
                            "end": "2021-01-02T00:00:00Z"
                          }
                        },
                        "number_of": {
                          "type": "number",
                          "description": "If specified, the number of intents of this type that must have occurred within the time range. The default is 1."
                        },
                        "number_of_operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "If specified, the operator to use when filtering the number of events.  The default is \"gte\"."
                        },
                        "combine_previous_operation": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or",
                            "then"
                          ],
                          "description": "If specified, the operation to use when combining any previous intent filters.  Defaults to \"and\"."
                        }
                      },
                      "required": [
                        "intent"
                      ],
                      "description": "A filter for intents that the user has expressed",
                      "example": {
                        "intent": "intent_name",
                        "with": [
                          {
                            "property_name": "attribute_name",
                            "operator": "eq",
                            "values": [
                              "attribute_value"
                            ]
                          }
                        ],
                        "within": {
                          "start": "2021-01-01T00:00:00Z",
                          "end": "2021-01-02T00:00:00Z"
                        }
                      }
                    },
                    "description": "If specified, the user must have expressed the intents."
                  },
                  "performed_events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "event_name": {
                          "type": "string",
                          "description": "The name of the event.  Can be \"Any Event\" to match any event."
                        },
                        "with": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "property_name": {
                                "type": "string",
                                "description": "The name of the property whose values are being filtered.  This is typically a trait or event property."
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "eq",
                                  "neq",
                                  "in",
                                  "nin",
                                  "case_insensitive_eq",
                                  "case_insensitive_neq",
                                  "regex",
                                  "not_regex",
                                  "between",
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "description": "The comparison operator to use when filtering the property values.  If not specified, the default is \"eq\".",
                                "example": "eq"
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                },
                                "description": "The values to filter the property by.  This can be an array of one, in which case all operators are supported, or an array of multiple values, in which case only \"in\" and \"nin\" are supported."
                              }
                            },
                            "required": [
                              "property_name",
                              "values"
                            ]
                          },
                          "description": "If specified the event must have all the property/values specified.  User traits on the event are also valid."
                        },
                        "within": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string",
                              "description": "The start of the time range as an ISO date string",
                              "example": "2021-01-01T00:00:00Z"
                            },
                            "end": {
                              "type": "string",
                              "description": "The end of the time range as an ISO date string",
                              "example": "2021-01-02T00:00:00Z"
                            },
                            "period": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "number",
                                  "description": "The number of time units",
                                  "example": 1
                                },
                                "unit": {
                                  "type": "string",
                                  "enum": [
                                    "day",
                                    "week",
                                    "month"
                                  ],
                                  "description": "The time unit",
                                  "example": "day"
                                },
                                "tz": {
                                  "type": "string",
                                  "description": "The timezone",
                                  "example": "America/New_York"
                                }
                              },
                              "required": [
                                "number",
                                "unit",
                                "tz"
                              ],
                              "description": "The period of time to use when filtering the data.  If specified, overrides start and end.  This is typically used for events.",
                              "example": {
                                "number": 1,
                                "unit": "day",
                                "tz": "America/New_York"
                              }
                            }
                          },
                          "description": "If specified, the event must have occurred within this time range.",
                          "example": {
                            "start": "2021-01-01T00:00:00Z",
                            "end": "2021-01-02T00:00:00Z"
                          }
                        },
                        "groupBy": {
                          "type": "object",
                          "properties": {
                            "property_name": {
                              "type": "string"
                            },
                            "property_values": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "property_name",
                            "property_values"
                          ],
                          "description": "If specified, the events will be grouped by this property for the values specified."
                        },
                        "number_of": {
                          "type": "number",
                          "description": "If specified, the number of events of this type that must have occurred within the time range. The default is 1."
                        },
                        "number_of_operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "If specified, the operator to use when filtering the number of events.  The default is \"gte\"."
                        },
                        "combine_previous_operation": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or",
                            "then"
                          ],
                          "description": "If specified, the operation to use when combining any previous event filters.  Defaults to \"and\"."
                        }
                      },
                      "required": [
                        "event_name"
                      ]
                    },
                    "description": "If specified, the user must have performed the events."
                  },
                  "combine_previous_operation": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or"
                    ],
                    "description": "If specified, the operation to use when combining any previous user filters.  Defaults to \"or\"."
                  }
                },
                "description": "A filter for selecting users",
                "example": {
                  "cohort": "cohort_name",
                  "with": [
                    {
                      "property_name": "trait_name",
                      "operator": "eq",
                      "values": [
                        "trait_value"
                      ]
                    }
                  ],
                  "shown_intents": [
                    {
                      "intent": "intent_name",
                      "with": [
                        {
                          "property_name": "attribute_name",
                          "operator": "eq",
                          "values": [
                            "attribute_value"
                          ]
                        }
                      ],
                      "within": {
                        "start": "2021-01-01T00:00:00Z",
                        "end": "2021-01-02T00:00:00Z"
                      }
                    }
                  ],
                  "performed_events": [
                    {
                      "event_name": "event_name",
                      "within": {
                        "start": "2021-01-01T00:00:00Z",
                        "end": "2021-01-02T00:00:00Z"
                      }
                    }
                  ]
                }
              },
              "description": "User filters for the segmentation."
            },
            "shownIntents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "intent": {
                    "type": "string",
                    "description": "The name of the intent.  Can be \"Any Intent\" to match any intent."
                  },
                  "with": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "property_name": {
                          "type": "string",
                          "description": "The name of the property whose values are being filtered.  This is typically a trait or event property."
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "case_insensitive_eq",
                            "case_insensitive_neq",
                            "regex",
                            "not_regex",
                            "between",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "The comparison operator to use when filtering the property values.  If not specified, the default is \"eq\".",
                          "example": "eq"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          "description": "The values to filter the property by.  This can be an array of one, in which case all operators are supported, or an array of multiple values, in which case only \"in\" and \"nin\" are supported."
                        }
                      },
                      "required": [
                        "property_name",
                        "values"
                      ]
                    },
                    "description": "If specified, the intent must have the attribute/values specified."
                  },
                  "within": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "description": "The start of the time range as an ISO date string",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "end": {
                        "type": "string",
                        "description": "The end of the time range as an ISO date string",
                        "example": "2021-01-02T00:00:00Z"
                      },
                      "period": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "number",
                            "description": "The number of time units",
                            "example": 1
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "day",
                              "week",
                              "month"
                            ],
                            "description": "The time unit",
                            "example": "day"
                          },
                          "tz": {
                            "type": "string",
                            "description": "The timezone",
                            "example": "America/New_York"
                          }
                        },
                        "required": [
                          "number",
                          "unit",
                          "tz"
                        ],
                        "description": "The period of time to use when filtering the data.  If specified, overrides start and end.  This is typically used for events.",
                        "example": {
                          "number": 1,
                          "unit": "day",
                          "tz": "America/New_York"
                        }
                      }
                    },
                    "description": "If specified, the intent must have occurred within this time range.",
                    "example": {
                      "start": "2021-01-01T00:00:00Z",
                      "end": "2021-01-02T00:00:00Z"
                    }
                  },
                  "number_of": {
                    "type": "number",
                    "description": "If specified, the number of intents of this type that must have occurred within the time range. The default is 1."
                  },
                  "number_of_operator": {
                    "type": "string",
                    "enum": [
                      "eq",
                      "gt",
                      "gte",
                      "lt",
                      "lte"
                    ],
                    "description": "If specified, the operator to use when filtering the number of events.  The default is \"gte\"."
                  },
                  "combine_previous_operation": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or",
                      "then"
                    ],
                    "description": "If specified, the operation to use when combining any previous intent filters.  Defaults to \"and\"."
                  }
                },
                "required": [
                  "intent"
                ],
                "description": "A filter for intents that the user has expressed",
                "example": {
                  "intent": "intent_name",
                  "with": [
                    {
                      "property_name": "attribute_name",
                      "operator": "eq",
                      "values": [
                        "attribute_value"
                      ]
                    }
                  ],
                  "within": {
                    "start": "2021-01-01T00:00:00Z",
                    "end": "2021-01-02T00:00:00Z"
                  }
                }
              },
              "description": "Users who have shown this intent."
            }
          },
          "required": [
            "range",
            "eventFilters"
          ],
          "description": "Inputs for the segmentation chart",
          "title": "SegmentationChartInput"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event_name": {
                    "type": "string",
                    "description": "Name of the event"
                  },
                  "points": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string",
                          "description": "Start timestamp of the point"
                        },
                        "end": {
                          "type": "string",
                          "description": "End timestamp of the point"
                        },
                        "total": {
                          "type": "number",
                          "description": "Total number of events in this period"
                        },
                        "unique": {
                          "type": "number",
                          "description": "Number of unique users in this period"
                        },
                        "average": {
                          "type": "number",
                          "description": "Average number of events per unique user in this period"
                        },
                        "drilldown_id": {
                          "type": "string",
                          "description": "Drilldown id for this point"
                        }
                      },
                      "required": [
                        "start",
                        "end",
                        "total",
                        "unique",
                        "average"
                      ]
                    },
                    "description": "Points of the segmentation chart, if no group by was used."
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "group": {
                          "type": "string",
                          "description": "Group name"
                        },
                        "points": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "start": {
                                "type": "string",
                                "description": "Start timestamp of the point"
                              },
                              "end": {
                                "type": "string",
                                "description": "End timestamp of the point"
                              },
                              "total": {
                                "type": "number",
                                "description": "Total number of events in this period"
                              },
                              "unique": {
                                "type": "number",
                                "description": "Number of unique users in this period"
                              },
                              "average": {
                                "type": "number",
                                "description": "Average number of events per unique user in this period"
                              },
                              "drilldown_id": {
                                "type": "string",
                                "description": "Drilldown id for this point"
                              }
                            },
                            "required": [
                              "start",
                              "end",
                              "total",
                              "unique",
                              "average"
                            ]
                          },
                          "description": "Points for the group"
                        }
                      },
                      "required": [
                        "group",
                        "points"
                      ]
                    },
                    "description": "Groups of points in the segmentation chart, if group by was used."
                  },
                  "highlights": {
                    "type": "object",
                    "properties": {
                      "average_events": {
                        "type": "number",
                        "description": "Average number of events per period"
                      },
                      "average_unique_users": {
                        "type": "number",
                        "description": "Average number of unique users per period"
                      }
                    },
                    "required": [
                      "average_events",
                      "average_unique_users"
                    ],
                    "description": "Highlights for the chart, if not grouped."
                  }
                },
                "required": [
                  "event_name"
                ],
                "description": "Segmentation chart result"
              },
              "title": "SegmentationChartResult",
              "description": "Results for the segmentation chart"
            }
          }
        }
      }
    }
  }
}